/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package formularios;

import baseDatos.baseDatos;
import java.sql.*;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Keng
 */
public class frm_listaInstrumentos extends javax.swing.JFrame {
    private baseDatos bd;
    private Connection conn = null;
    private ButtonGroup checkBoxGroup;
    private DefaultTableModel tblModel;
    /**
     * Creates new form frm_listaInstrumentos
     */
    public frm_listaInstrumentos() {
        initComponents();
        
        //checkbox
        checkBoxGroup = new ButtonGroup();
        checkBoxGroup.add(rb_punteado);
        checkBoxGroup.add(rb_frotacion);
        checkBoxGroup.add(rb_percusion);
        
        //desactivar botones
        btn_editar.setEnabled(false);
        btn_eliminar.setEnabled(false);
        
        //obtener datos desde la bd
        try {
            conn = bd.abrirBD();
            Statement stmt = conn.createStatement();
            String query = "SELECT * FROM instrumentos WHERE disponible = '0'";
            ResultSet rs = stmt.executeQuery(query);
            
            while(rs.next()){
              String id = rs.getString("id");
              String nombre = rs.getString("nombre");
              String tipo = rs.getString("tipo");
              String valor = rs.getString("valor");
              String fechaCreacion = rs.getString("fecha_de_creacion");
              
              String tbData [] = {id, nombre, tipo, valor, fechaCreacion};
              tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();
              
              tblModel.addRow(tbData);
            }
            
        }
        catch(SQLException e){
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_eliminar1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_listaInstrumentos = new javax.swing.JTable();
        btn_buscar = new javax.swing.JButton();
        btn_atras1 = new javax.swing.JButton();
        txt_buscar = new javax.swing.JTextField();
        btn_eliminar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        rb_frotacion = new javax.swing.JRadioButton();
        rb_punteado = new javax.swing.JRadioButton();
        rb_percusion = new javax.swing.JRadioButton();
        btn_cargarLista = new javax.swing.JButton();
        btn_editar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        btn_eliminar1.setText("Eliminar");
        btn_eliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminar1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Lista de Instrumentos");

        table_listaInstrumentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Tipo", "Valor", "Fecha de Creacion"
            }
        ));
        table_listaInstrumentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_listaInstrumentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_listaInstrumentos);

        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        btn_atras1.setText("Atras");
        btn_atras1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atras1ActionPerformed(evt);
            }
        });

        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Inventario Musicales"));

        rb_frotacion.setText("Frotacion");
        rb_frotacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_frotacionActionPerformed(evt);
            }
        });

        rb_punteado.setText("Punteado");
        rb_punteado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_punteadoActionPerformed(evt);
            }
        });

        rb_percusion.setText("Percusion");
        rb_percusion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_percusionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(rb_frotacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rb_punteado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rb_percusion)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rb_frotacion)
                    .addComponent(rb_punteado)
                    .addComponent(rb_percusion))
                .addContainerGap())
        );

        btn_cargarLista.setText("Refrescar Lista");
        btn_cargarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cargarListaActionPerformed(evt);
            }
        });

        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        jLabel2.setText("Nota: Para editar y eliminar primero debe seleccionar el registro");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_cargarLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 29, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addComponent(btn_atras1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(735, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(44, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_buscar, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                                .addComponent(btn_buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cargarLista, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(533, Short.MAX_VALUE)
                    .addComponent(btn_atras1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(17, 17, 17)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        if(txt_buscar.getText().equals("") == false){
            //limpiar tabla
            tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();
            tblModel.setRowCount(0);
        
            String buscar = txt_buscar.getText();
            //obtener datos desde la bd
            try {
                conn = bd.abrirBD();
                Statement stmt = conn.createStatement();
                String query = "SELECT *"
                        + "FROM instrumentos "
                        + "WHERE disponible = '0' "
                        + "AND nombre like '%" + buscar +"%' "
                        + "OR tipo like '%" + buscar + "%' "
                        + "OR valor like '%" + buscar + "%' "
                        + "OR fecha_de_creacion like '%" + buscar + "%' ";
                ResultSet rs = stmt.executeQuery(query);

                while(rs.next()){
                  String id = rs.getString("id");
                  String nombre = rs.getString("nombre");
                  String tipo = rs.getString("tipo");
                  String valor = rs.getString("valor");
                  String fechaCreacion = rs.getString("fecha_de_creacion");

                  String tbData [] = {id, nombre, tipo, valor, fechaCreacion};
                  tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();

                  tblModel.addRow(tbData);
                }

            }
            catch(SQLException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_atras1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_atras1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        System.err.println("Base de datos cerrada!");
    }//GEN-LAST:event_btn_atras1ActionPerformed

    private void btn_eliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_eliminar1ActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        //limpiar search
        txt_buscar.setText("");
        
        //limpiar radio buttons
        checkBoxGroup.clearSelection();
        
        tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();
        int selectedRowIndex = table_listaInstrumentos.getSelectedRow();
        
        String id = tblModel.getValueAt(selectedRowIndex, 0).toString(); 
        
         String query = "UPDATE instrumentos SET disponible = '1' WHERE id = ?";
            try{
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setString(1, id);
                int row = pstmt.executeUpdate();
                
                if(row == 1){
                    JOptionPane.showMessageDialog(null, "Se ha eliminado instrumento");
                    JOptionPane.showMessageDialog(null, "Por favor refresque la lista");
                }else{
                    JOptionPane.showMessageDialog(null, "No se pudo eliminar instrumento");
                }
            }
            catch (SQLException e){
                e.printStackTrace();
                System.err.println(e.getMessage());
            }

        btn_editar.setEnabled(false);
        btn_eliminar.setEnabled(false);        
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void rb_frotacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_frotacionActionPerformed
        // TODO add your handling code here:
        
        //limpiar search
        txt_buscar.setText("");
        
        //limpiar tabla
        tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();
        tblModel.setRowCount(0);
        
        //obtener datos desde la bd
        try {
            Statement stmt = conn.createStatement();
            String query = "SELECT * FROM instrumentos WHERE disponible = '0' AND tipo = 'Frotacion'";
            ResultSet rs = stmt.executeQuery(query);
            
            while(rs.next()){
              String id = rs.getString("id");
              String nombre = rs.getString("nombre");
              String tipo = rs.getString("tipo");
              String valor = rs.getString("valor");
              String fechaCreacion = rs.getString("fecha_de_creacion");
              
              String tbData [] = {id, nombre, tipo, valor, fechaCreacion};
              tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();
              
              tblModel.addRow(tbData);
            }
            
        }
        catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_rb_frotacionActionPerformed

    private void rb_punteadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_punteadoActionPerformed
        // TODO add your handling code here:
        
        //limpiar search
        txt_buscar.setText("");
        
        tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();
        tblModel.setRowCount(0);
        
        //obtener datos desde la bd
        try {
            Statement stmt = conn.createStatement();
            String query = "SELECT * FROM instrumentos WHERE disponible = '0' AND tipo = 'Punteado'";
            ResultSet rs = stmt.executeQuery(query);
            
            while(rs.next()){
              String id = rs.getString("id");
              String nombre = rs.getString("nombre");
              String tipo = rs.getString("tipo");
              String valor = rs.getString("valor");
              String fechaCreacion = rs.getString("fecha_de_creacion");
              
              String tbData [] = {id, nombre, tipo, valor, fechaCreacion};
              tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();
              
              tblModel.addRow(tbData);
            }
            
        }
        catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_rb_punteadoActionPerformed

    private void rb_percusionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_percusionActionPerformed
        // TODO add your handling code here:
        
        //limpiar search
        txt_buscar.setText("");
        
        tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();
        tblModel.setRowCount(0);
        
        //obtener datos desde la bd
        try {
            Statement stmt = conn.createStatement();
            String query = "SELECT * FROM instrumentos WHERE disponible = '0' AND tipo = 'Percusion'";
            ResultSet rs = stmt.executeQuery(query);
            
            while(rs.next()){
              String id = rs.getString("id");
              String nombre = rs.getString("nombre");
              String tipo = rs.getString("tipo");
              String valor = rs.getString("valor");
              String fechaCreacion = rs.getString("fecha_de_creacion");
              
              String tbData [] = {id, nombre, tipo, valor, fechaCreacion};
              tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();
              
              tblModel.addRow(tbData);
            }
            
        }
        catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_rb_percusionActionPerformed

    private void btn_cargarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cargarListaActionPerformed
        // TODO add your handling code here:
        //limpiar search
        txt_buscar.setText("");
        
        //limpiar radio buttons
        checkBoxGroup.clearSelection();
        
        //limpiar tabla
        tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();
        tblModel.setRowCount(0);
        
        try {
            conn = bd.abrirBD();
            Statement stmt = conn.createStatement();
            String query = "SELECT * FROM instrumentos WHERE disponible = '0'";
            ResultSet rs = stmt.executeQuery(query);
            
            while(rs.next()){
              String id = rs.getString("id");
              String nombre = rs.getString("nombre");
              String tipo = rs.getString("tipo");
              String valor = rs.getString("valor");
              String fechaCreacion = rs.getString("fecha_de_creacion");
              
              String tbData [] = {id, nombre, tipo, valor, fechaCreacion};
              tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();
              
              tblModel.addRow(tbData);
            }
            
        }
        catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_cargarListaActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        tblModel = (DefaultTableModel)table_listaInstrumentos.getModel();
        int selectedRowIndex = table_listaInstrumentos.getSelectedRow();
        
        String id = tblModel.getValueAt(selectedRowIndex, 0).toString();
        String nombre = tblModel.getValueAt(selectedRowIndex, 1).toString();
        String valor = tblModel.getValueAt(selectedRowIndex, 3).toString();
         
        frm_editarInstrumento editar = new frm_editarInstrumento(id, nombre, valor);
        editar.setVisible(true);
        
        btn_editar.setEnabled(false);
        btn_eliminar.setEnabled(false);
    }//GEN-LAST:event_btn_editarActionPerformed

    private void table_listaInstrumentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_listaInstrumentosMouseClicked
        // TODO add your handling code here:
        btn_editar.setEnabled(true);
        btn_eliminar.setEnabled(true);
    }//GEN-LAST:event_table_listaInstrumentosMouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_listaInstrumentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_listaInstrumentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_listaInstrumentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_listaInstrumentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_listaInstrumentos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_atras1;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_cargarLista;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_eliminar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rb_frotacion;
    private javax.swing.JRadioButton rb_percusion;
    private javax.swing.JRadioButton rb_punteado;
    private javax.swing.JTable table_listaInstrumentos;
    private javax.swing.JTextField txt_buscar;
    // End of variables declaration//GEN-END:variables
}
